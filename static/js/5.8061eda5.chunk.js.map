{"version":3,"sources":["components/Order/Order.css","components/Order/Order.jsx","containers/Orders/Orders.jsx"],"names":["module","exports","Order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","newIg","react_default","a","createElement","style","display","margin","padding","key","className","classes","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","order","components_Order_Order","id","Component","connect","state","auth","dispatch","actions","WithErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,iJCuDHA,EArDD,SAAAC,GACV,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAIlC,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACrC,IAAIC,EACJ,OAAQD,EAAGJ,MACP,IAAK,QACDK,EAAQ,iCACR,MACJ,IAAK,QACDA,EAAQ,2BACR,MACJ,IAAK,SACDA,EAAQ,2BACR,MACJ,IAAK,OACDA,EAAQ,2BACR,MACJ,QACI,OAAgBD,EAExB,OACIE,EAAAC,EAAAC,cAAA,QACIC,MAAO,CACHC,QAAS,eACTC,OAAQ,QACRC,QAAS,OAEbC,IAAKT,EAAGJ,MAEPK,EARL,MAQeD,EAAGH,UAI1B,OACIK,EAAAC,EAAAC,cAAA,OAAKM,UAAWC,IAAQpB,OACpBW,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,+EADJ,MACoCN,GAEpCI,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,uFAAgC,IAC/BQ,OAAOC,WAAWrB,EAAMsB,OAAOC,QAAQ,GAF5C,qECxCNC,8LAEEC,KAAKzB,MAAM0B,cAAcD,KAAKzB,MAAM2B,MAAOF,KAAKzB,MAAM4B,yCAItD,IAAIC,EAASnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,MAUb,OATKL,KAAKzB,MAAM+B,UACZF,EAASJ,KAAKzB,MAAM6B,OAAOtB,IAAI,SAAAyB,GAAK,OAChCtB,EAAAC,EAAAC,cAACqB,EAAD,CACIhB,IAAKe,EAAME,GACXjC,YAAa+B,EAAM/B,YACnBqB,MAAOU,EAAMV,WAIlBZ,EAAAC,EAAAC,cAAA,WAAMiB,UAhBAM,aAoCNC,sBAhBS,SAAAC,GACpB,MAAO,CACHR,OAAQQ,EAAML,MAAMH,OACpBE,QAASM,EAAML,MAAMD,QACrBJ,MAAOU,EAAMC,KAAKX,MAClBC,OAAQS,EAAMC,KAAKV,SAIA,SAAAW,GACvB,MAAO,CACHb,cAAe,SAACC,EAAOC,GAAR,OACXW,EAASC,IAAoBb,EAAOC,OAIjCQ,CAGbK,YAAiBjB,EAAQkB","file":"static/js/5.8061eda5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__4yi4Z\"};","import React from 'react';\nimport classes from './Order.css';\n\nconst Order = props => {\n    const ingredients = [];\n    for (let ingredientName in props.ingredients) {\n        ingredients.push({\n            name: ingredientName,\n            amount: props.ingredients[ingredientName]\n        });\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        let newIg;\n        switch (ig.name) {\n            case 'salad':\n                newIg = 'سالاد';\n                break;\n            case 'bacon':\n                newIg = 'بیکن';\n                break;\n            case 'cheese':\n                newIg = 'پنیر';\n                break;\n            case 'meat':\n                newIg = 'گوشت';\n                break;\n            default:\n                return (newIg = ig);\n        }\n        return (\n            <span\n                style={{\n                    display: 'inline-block',\n                    margin: '0 8px',\n                    padding: '5px'\n                }}\n                key={ig.name}\n            >\n                {newIg} : {ig.amount}\n            </span>\n        );\n    });\n    return (\n        <div className={classes.Order}>\n            <p>\n                <strong>مشخصات برگر</strong> : {ingredientOutput}\n            </p>\n            <p>\n                <strong> مبلغ پرداختی:</strong>{' '}\n                {Number.parseFloat(props.price).toFixed(3)} تومان\n            </p>\n        </div>\n    );\n};\n\nexport default Order;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Order from './../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport * as actions from '../../store/actions/index';\nimport WithErrorHandler from './../WithErrorHandler/WithErrorHandler';\nimport Spinner from './../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n    componentDidMount() {\n        this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n\n    render() {\n        let orders = <Spinner />;\n        if (!this.props.loading) {\n            orders = this.props.orders.map(order => (\n                <Order\n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={order.price}\n                />\n            ));\n        }\n        return <div>{orders}</div>;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) =>\n            dispatch(actions.fetchOrders(token, userId))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(WithErrorHandler(Orders, axios));\n"],"sourceRoot":""}