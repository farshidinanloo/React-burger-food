{"version":3,"sources":["components/Order/CheckoutSummary/CheckoutSummary.jsx","containers/Checkout/ContactData/ContactData.jsx","containers/Checkout/Checkout.jsx","components/UI/Input/Input.jsx","components/UI/Input/Input.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css"],"names":["checkoutSummary","props","react_default","a","createElement","className","classes","CheckoutSummary","role","aria-label","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","options","displayValue","formIsValid","loading","orderHandler","event","preventDefault","formData","formElementIdentifier","_this","order","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","Object","defineProperty","setState","_this2","this","formElementsArray","key","push","id","config","form","onSubmit","map","formElement","Input","invalid","shouldValidate","changed","disabled","Spinner","Component","connect","burgerBuilder","totalPrice","auth","dispatch","actions","WithErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","react_router","to","purchasedRedirect","purchased","CheckoutSummary_CheckoutSummary","path","match","component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_css__WEBPACK_IMPORTED_MODULE_1__","_Input_css__WEBPACK_IMPORTED_MODULE_1___default","inputElement","inputClasses","InputElement","Invalid","assign","join","onChange","option","Label","label","module","exports"],"mappings":"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","file":"static/js/3.ecd6f8e5.chunk.js","sourcesContent":["import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.css';\n\nconst checkoutSummary = props => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h2>\n                {' '}\n                <span role='img' aria-label='smiling face'>\n                    😊\n                </span>{' '}\n                امیدواریم از این برگر لذت ببرید{' '}\n            </h2>\n            <div style={{ width: '100%', margin: 'auto' }}>\n                <Burger ingredients={props.ingredients} />\n            </div>\n            <Button btnType='Danger' clicked={props.checkoutCancelled}>\n                لغو\n            </Button>\n            <Button btnType='Success' clicked={props.checkoutContinued}>\n                ادامه\n            </Button>\n        </div>\n    );\n};\n\nexport default checkoutSummary;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from './../../../components/UI/Button/Button';\nimport classes from './ContactData.css';\nimport axios from '../../../axios-orders';\nimport Spinner from './../../../components/UI/Spinner/Spinner';\nimport Input from './../../../components/UI/Input/Input';\nimport WithErrorHandler from './../../WithErrorHandler/WithErrorHandler';\nimport * as actions from '../../../store/actions/index';\nimport { updateObject, checkValidity } from './../../../shared/utility';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: ' نام'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'آدرس'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: ' کد پستی'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 10,\n                    isNumeric: true\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'کشور'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: ' ایمیل'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        { value: 'fastest', displayValue: 'سریع' },\n                        { value: 'cheapest', displayValue: 'معمولی' }\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true\n            }\n        },\n        formIsValid: false,\n        loading: false\n    };\n\n    orderHandler = event => {\n        event.preventDefault();\n\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[\n                formElementIdentifier\n            ].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData,\n            userId: this.props.userId\n        };\n\n        this.props.onOrderBurger(order, this.props.token);\n    };\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedFormElement = updateObject(\n            this.state.orderForm[inputIdentifier],\n            {\n                value: event.target.value,\n                valid: checkValidity(\n                    event.target.value,\n                    this.state.orderForm[inputIdentifier].validation\n                ),\n                touched: true\n            }\n        );\n        const updatedOrderForm = updateObject(this.state.orderForm, {\n            [inputIdentifier]: updatedFormElement\n        });\n\n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid =\n                updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n        this.setState({\n            orderForm: updatedOrderForm,\n            formIsValid: formIsValid\n        });\n    };\n\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input\n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={event =>\n                            this.inputChangedHandler(event, formElement.id)\n                        }\n                    />\n                ))}\n                <Button btnType='Success' disabled={!this.state.formIsValid}>\n                    سفارش\n                </Button>\n            </form>\n        );\n        if (this.props.loading) {\n            form = <Spinner />;\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>لطفا اطلاعات خود را وارد کنید</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData, token) =>\n            dispatch(actions.purchaseBurger(orderData, token))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(WithErrorHandler(ContactData, axios));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport CheckoutSummary from './../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    };\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    };\n\n    render() {\n        let summary = <Redirect to='/' />;\n        if (this.props.ings) {\n            const purchasedRedirect = this.props.purchased ? (\n                <Redirect to='/' />\n            ) : null;\n            summary = (\n                <div>\n                    {purchasedRedirect}\n                    <CheckoutSummary\n                        ingredients={this.props.ings}\n                        checkoutCancelled={this.checkoutCancelledHandler}\n                        checkoutContinued={this.checkoutContinuedHandler}\n                    />\n                    <Route\n                        path={this.props.match.path + '/contact-data'}\n                        component={ContactData}\n                    />\n                </div>\n            );\n        }\n        return summary;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    };\n};\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from 'react';\nimport classes from './Input.css';\n\nconst Input = props => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch (props.elementType) {\n        case 'input':\n            inputElement = (\n                <input\n                    className={inputClasses.join(' ')}\n                    {...props.elementConfig}\n                    value={props.value}\n                    onChange={props.changed}\n                />\n            );\n            break;\n        case 'textarea':\n            inputElement = (\n                <textarea\n                    className={inputClasses.join(' ')}\n                    {...props.elementConfig}\n                    value={props.value}\n                    onChange={props.changed}\n                />\n            );\n            break;\n        case 'select':\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}\n                >\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = (\n                <input\n                    className={inputClasses.join(' ')}\n                    {...props.elementConfig}\n                    value={props.value}\n                    onChange={props.changed}\n                />\n            );\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1J81r\"};"],"sourceRoot":""}