{"version":3,"sources":["containers/Auth/Auth.css","containers/Auth/Auth.jsx","components/UI/Input/Input.jsx","components/UI/Input/Input.css"],"names":["module","exports","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignup","inputChangedHandler","event","controlName","updatedControls","updateObject","_this","Object","C_Users_farshid_Desktop_React_Burger_Food_master_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","checkValidity","setState","submitHandler","preventDefault","props","onAuth","switchAuthModeHandler","prevState","this","buildingBurger","authRedirectPath","onSetAuthRedirectPath","_this2","formElementsArray","key","push","id","config","form","map","formElement","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_components_UI_Input_Input__WEBPACK_IMPORTED_MODULE_9__","invalid","shouldValidate","changed","loading","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_11__","errorMessage","error","message","authRedirect","isAuthenticated","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","className","classes","onSubmit","_components_UI_Button_Button__WEBPACK_IMPORTED_MODULE_10__","btnType","clicked","Component","connect","auth","token","burgerBuilder","building","dispatch","actions","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_css__WEBPACK_IMPORTED_MODULE_1__","_Input_css__WEBPACK_IMPORTED_MODULE_1___default","Input","inputElement","inputClasses","InputElement","Invalid","assign","join","onChange","options","option","displayValue","Label","label"],"mappings":"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","file":"static/js/4.bd8e32b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth__2YUr1\"};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport classes from './Auth.css';\nimport * as actions from '../../store/actions/index';\nimport { updateObject, checkValidity } from '../../shared/utility';\n\nclass Auth extends Component {\n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'ایمیل'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'پسورد'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        isSignup: true\n    };\n\n    componentDidMount() {\n        if (!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\n            this.props.onSetAuthRedirectPath();\n        }\n    }\n\n    inputChangedHandler = (event, controlName) => {\n        const updatedControls = updateObject(this.state.controls, {\n            [controlName]: updateObject(this.state.controls[controlName], {\n                value: event.target.value,\n                valid: checkValidity(\n                    event.target.value,\n                    this.state.controls[controlName].validation\n                ),\n                touched: true\n            })\n        });\n        this.setState({ controls: updatedControls });\n    };\n\n    submitHandler = event => {\n        event.preventDefault();\n        this.props.onAuth(\n            this.state.controls.email.value,\n            this.state.controls.password.value,\n            this.state.isSignup\n        );\n    };\n\n    switchAuthModeHandler = () => {\n        this.setState(prevState => {\n            return { isSignup: !prevState.isSignup };\n        });\n    };\n\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.controls) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.controls[key]\n            });\n        }\n\n        let form = formElementsArray.map(formElement => (\n            <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={event =>\n                    this.inputChangedHandler(event, formElement.id)\n                }\n            />\n        ));\n\n        if (this.props.loading) {\n            form = <Spinner />;\n        }\n\n        let errorMessage = null;\n\n        if (this.props.error) {\n            errorMessage = <p>{this.props.error.message}</p>;\n        }\n\n        let authRedirect = null;\n        if (this.props.isAuthenticated) {\n            authRedirect = <Redirect to={this.props.authRedirectPath} />;\n        }\n\n        return (\n            <div className={classes.Auth}>\n                {authRedirect}\n                {errorMessage}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button btnType='Success'>ارسال</Button>\n                </form>\n                <Button clicked={this.switchAuthModeHandler} btnType='Danger'>\n                    تغییر به {this.state.isSignup ? 'ورود' : 'ثبت نام'}\n                </Button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null,\n        buildingBurger: state.burgerBuilder.building,\n        authRedirectPath: state.auth.authRedirectPath\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignup) =>\n            dispatch(actions.auth(email, password, isSignup)),\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Auth);\n","import React from 'react';\nimport classes from './Input.css';\n\nconst Input = props => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch (props.elementType) {\n        case 'input':\n            inputElement = (\n                <input\n                    className={inputClasses.join(' ')}\n                    {...props.elementConfig}\n                    value={props.value}\n                    onChange={props.changed}\n                />\n            );\n            break;\n        case 'textarea':\n            inputElement = (\n                <textarea\n                    className={inputClasses.join(' ')}\n                    {...props.elementConfig}\n                    value={props.value}\n                    onChange={props.changed}\n                />\n            );\n            break;\n        case 'select':\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}\n                >\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = (\n                <input\n                    className={inputClasses.join(' ')}\n                    {...props.elementConfig}\n                    value={props.value}\n                    onChange={props.changed}\n                />\n            );\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\"};"],"sourceRoot":""}